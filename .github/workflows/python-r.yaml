name: Python-R Swish Proj Pipeline

on:
  push:
    branches:
      - main
    paths:
        - "Dockerfile"          # Trigger for Dockerfile changes
        - "app.py"              # Trigger for app changes
        - "kubernetes/terraform/**" # Trigger for changes in the Terraform directory
  pull_request:
    branches:
      - main
    paths:
        - "Dockerfile"          # Trigger for Dockerfile changes
        - "app.py"              # Trigger for app changes
        - "kubernetes/terraform/**" # Trigger for changes in the Terraform directory

env:
  DOCKER_IMAGE: 0l4bode/swish-devsecops-proj

jobs:
  # Docker Build and Push Job
  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, 'Dockerfile') || 
      contains(github.event.head_commit.message, 'app.py') || 
      github.event_name == 'pull_request'

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Login
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build -t $DOCKER_IMAGE:${{ github.sha }} .
          docker tag $DOCKER_IMAGE:${{ github.sha }} $DOCKER_IMAGE:latest
          docker push $DOCKER_IMAGE:${{ github.sha }}
          docker push $DOCKER_IMAGE:latest

  # Job to Track Terraform Directory Changes
  track-terraform-changes:
    name: Detect Terraform Directory Changes
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Detect Changes in Terraform Directory
      - name: List Changed Files
        id: changes
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed_files.txt
          cat changed_files.txt

      # Step 3: Check If Changes Exist in Terraform Directory
      - name: Check Terraform Directory Changes
        run: |
          if grep -q "kubernetes/terraform/" changed_files.txt; then
            echo "Terraform directory changes detected."
          else
            echo "No changes in the Terraform directory."
            exit 0

  # Job to Request Manual Approval for Terraform Changes
  request-approval:
    name: Manual Approval for Terraform Changes
    runs-on: ubuntu-latest
    needs: track-terraform-changes
    environment:
      name: Terraform-Approval # Specify the environment for manual approval

    steps:
      - name: Notify for Manual Approval
        run: echo "Terraform changes detected. Awaiting manual approval."
